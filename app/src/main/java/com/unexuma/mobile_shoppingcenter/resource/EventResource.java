/**
 * Health Alerts
 * This application allows users to send and receive information about a user's health condition.
 *
 * OpenAPI spec version: 1.0
 * Contact: info@spilab.es
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.unexuma.mobile_shoppingcenter.resource;




import java.util.*;
import org.json.*;





import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.UnsupportedEncodingException;
import android.content.Context;

import com.unexuma.mobile_shoppingcenter.model.Event;
import com.unexuma.mobile_shoppingcenter.response.EventResponse;
import com.unexuma.mobile_shoppingcenter.service.MQTTService;
import com.unexuma.mobile_shoppingcenter.service.MqttClient;

import org.eclipse.paho.client.mqttv3.MqttException;


public class EventResource {

    private Context context;
    private MqttClient client;

    private EventResponse eventResponse;

    public EventResource(Context context) {
        this.context = context;
        client = new MqttClient();
    }

  public Exception executeMethod(EventResponse response) throws MqttException, UnsupportedEncodingException{

        eventResponse=response;

      switch (response.getMethod()){
          case "postEvent":
           postEvent(response.getParams().getevent());
          break;
          default:
              client.publishMessage( MQTTService.getClient(), "Error: Not Found Method",1,eventResponse.getSender());
              return new Exception("Not found method.");
      }

      return null;
  }

  /**
  * Sends an event
  * Sends an event
   * @param event Information about the event
   * @return String
  */
  public void postEvent (Event event) throws MqttException, UnsupportedEncodingException{

     //TODO: Process the information, etc.



     //TODO: Return String on reply.
      client.publishMessage( MQTTService.getClient(), "postEvent OK",1,eventResponse.getSender());
  }





}
